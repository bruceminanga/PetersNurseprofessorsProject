name: Deploy to cPanel via FTP

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Cache pip dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Collect static files
        run: |
          source venv/bin/activate
          cd $GITHUB_WORKSPACE
          python manage.py collectstatic --noinput

      - name: Deploy to cPanel via FTP
        id: deploy
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: nurseprofessors.com
          username: ${{ secrets.ftp_USERNAME }}
          password: ${{ secrets.ftp_PASSWORD }}
          server-dir: ./PetersNurseprofessorsProject/
          exclude: ".git/ .github/"
          log-level: verbose

      - name: Retry FTP deployment on failure
        if: failure()
        run: |
          retry() {
            local n=1
            local max=5
            local delay=10
            while true; do
              "$@" && break || {
                if [[ $n -lt $max ]]; then
                  ((n++))
                  echo "Attempt $n/$max:"
                  sleep $delay;
                else
                  echo "The command has failed after $n attempts."
                  return 1
                fi
              }
            done
          }
          retry npx ftp-deploy --server nurseprofessors.com --username ${{ secrets.ftp_USERNAME }} --password ${{ secrets.ftp_PASSWORD }} --local-dir ./ --server-dir ./PetersNurseprofessorsProject/ --exclude ".git/ .github/"

      - name: Trigger migration script
        run: |
          echo "Triggering migration script..."
          curl -v -X GET "https://nurseprofessors.com/run-migrations/?secret=${{ secrets.MIGRATION_SECRET }}"
